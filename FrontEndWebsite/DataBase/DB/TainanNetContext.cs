// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using DataBase.Tables;

namespace DataBase.DB
{
    public partial class TainanNetContext : DbContext
    {
        public TainanNetContext()
        {
        }

        public TainanNetContext(DbContextOptions<TainanNetContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Class> Class { get; set; }
        public virtual DbSet<Course> Course { get; set; }
        public virtual DbSet<StuSelect> StuSelect { get; set; }
        public virtual DbSet<Student> Student { get; set; }
        public virtual DbSet<Teacher> Teacher { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Class>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CourseId).HasColumnName("courseID");

                entity.Property(e => e.EDate)
                    .HasColumnName("eDate")
                    .HasColumnType("date");

                entity.Property(e => e.Location)
                    .HasColumnName("location")
                    .HasMaxLength(50);

                entity.Property(e => e.SDate)
                    .HasColumnName("sDate")
                    .HasColumnType("date");

                entity.Property(e => e.TeaId).HasColumnName("teaID");

                entity.HasOne(d => d.Course)
                    .WithMany(p => p.Class)
                    .HasForeignKey(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Class_courseID");

                entity.HasOne(d => d.Tea)
                    .WithMany(p => p.Class)
                    .HasForeignKey(d => d.TeaId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Class_teaID");
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.Property(e => e.CourseId)
                    .HasColumnName("courseID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.CourseHour).HasColumnName("courseHour");

                entity.Property(e => e.CourseName)
                    .HasColumnName("courseName")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<StuSelect>(entity =>
            {
                entity.Property(e => e.Id)
                    .HasColumnName("id")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.ClassId).HasColumnName("classID");

                entity.Property(e => e.StuId).HasColumnName("stuID");

                entity.HasOne(d => d.Class)
                    .WithMany(p => p.StuSelect)
                    .HasForeignKey(d => d.ClassId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_StuSelect_classID");
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.HasKey(e => e.StuId);

                entity.Property(e => e.StuId)
                    .HasColumnName("stuID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.StuEmail)
                    .HasColumnName("stuEmail")
                    .HasMaxLength(50);

                entity.Property(e => e.StuName)
                    .HasColumnName("stuName")
                    .HasMaxLength(50);

                entity.Property(e => e.StuPhone)
                    .HasColumnName("stuPhone")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Teacher>(entity =>
            {
                entity.HasKey(e => e.TeaId);

                entity.Property(e => e.TeaId)
                    .HasColumnName("teaID")
                    .HasDefaultValueSql("(newid())");

                entity.Property(e => e.TeaEmail)
                    .HasColumnName("teaEmail")
                    .HasMaxLength(50);

                entity.Property(e => e.TeaName)
                    .HasColumnName("teaName")
                    .HasMaxLength(50);

                entity.Property(e => e.TeaPhone)
                    .HasColumnName("teaPhone")
                    .HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}